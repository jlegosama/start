// Basically just a wrapper around an fs.readlink
//
// XXX: Enhance this to support the Link type, by keeping
// a lookup table of {<dev+inode>:<path>}, so that hardlinks
// can be preserved in tarballs.
function LinkReader(e){var t=this;if(!(t instanceof LinkReader))throw new Error("LinkReader must be called as constructor.");if(!(e.type==="Link"&&e.Link||e.type==="SymbolicLink"&&e.SymbolicLink))throw new Error("Non-link type "+e.type);Reader.call(t,e)}module.exports=LinkReader;var fs=require("../../graceful-fs/graceful-fs.js"),fstream=require("../fstream.js"),inherits=require("../../inherits/inherits.js"),mkdir=require("../../mkdirp"),Reader=require("./reader.js");inherits(LinkReader,Reader);LinkReader.prototype._stat=function(e){var t=this;fs.readlink(t._path,function(n,r){if(n)return t.error(n);t.linkpath=t.props.linkpath=r;t.emit("linkpath",r);Reader.prototype._stat.call(t,e)})};LinkReader.prototype._read=function(){var e=this;if(e._paused)return;if(!e._ended){e.emit("end");e.emit("close");e._ended=!0}};