// A writable stream.
// It emits "entry" events, which provide a readable stream that has
// header info attached.
function Parse(){var e=this;if(!(e instanceof Parse))return new Parse;Stream.apply(e);e.writable=!0;e.readable=!0;e._stream=new BlockStream(512);e.position=0;e._stream.on("error",function(t){e.emit("error",t)});e._stream.on("data",function(t){e._process(t)});e._stream.on("end",function(){e._streamEnd()});e._stream.on("drain",function(){e.emit("drain")})}module.exports=Parse.create=Parse;var stream=require("stream"),Stream=stream.Stream,BlockStream=require("../vendor/block-stream/block-stream.js"),tar=require("../tar.js"),TarHeader=require("./header.js"),Entry=require("./entry.js"),BufferEntry=require("./buffer-entry.js"),ExtendedHeader=require("./extended-header.js"),assert=require("assert").ok,inherits=require("../vendor/inherits/inherits.js"),fstream=require("../vendor/fstream/fstream.js");inherits(Parse,fstream.Reader);Parse.prototype._streamEnd=function(){var e=this;e._ended||e.error("unexpected eof");e.emit("end")};Parse.prototype.write=function(e){if(this._ended){for(var t=0,n=e.length;t>n;t++)if(e[t]!==0)return this.error("write() after end()");return}return this._stream.write(e)};Parse.prototype.end=function(e){this._ended=!0;return this._stream.end(e)};Parse.prototype._read=function(){};Parse.prototype._process=function(e){assert(e&&e.length===512,"block size should be 512");if(this._entry){var t=this._entry;t.write(e);if(t._remaining===0){t.end();this._entry=null}}else{var n=!0;for(var r=0;r<512&&n;r++)n=e[r]===0;if(n){this._ended=this._eofStarted;this._eofStarted=!0}else{this._ended=this._eofStarted=!1;this._startEntry(e)}}this.position+=512};Parse.prototype._startEntry=function(e){var t=new TarHeader(e),n=this,r,i,s,o,u=!1;if(null===t.size||!t.cksumValid){var a=new Error("invalid tar file");a.header=t;a.tar_file_offset=this.position;a.tar_block=this.position/512;this.emit("error",a)}switch(tar.types[t.type]){case"File":case"OldFile":case"Link":case"SymbolicLink":case"CharacterDevice":case"BlockDevice":case"Directory":case"FIFO":case"ContiguousFile":case"GNUDumpDir":s=Entry;i="entry";break;case"GlobalExtendedHeader":s=ExtendedHeader;o=function(){n._global=n._global||{};Object.keys(r.fields).forEach(function(e){n._global[e]=r.fields[e]})};i="globalExtendedHeader";u=!0;break;case"ExtendedHeader":case"OldExtendedHeader":s=ExtendedHeader;o=function(){n._extended=r.fields};i="extendedHeader";u=!0;break;case"NextFileHasLongLinkpath":s=BufferEntry;o=function(){n._extended=n._extended||{};n._extended.linkpath=r.body};i="longLinkpath";u=!0;break;case"NextFileHasLongPath":case"OldGnuLongPath":s=BufferEntry;o=function(){n._extended=n._extended||{};n._extended.path=r.body};i="longPath";u=!0;break;default:s=Entry;i="ignoredEntry"}var f,l;if(u)f=l=null;else{var f=this._global,l=this._extended;this._extended=null}r=new s(t,l,f);r.meta=u;u||r.on("data",function(e){c.emit("data",e)});o&&r.on("end",o);this._entry=r;var c=this;r.on("pause",function(){c.pause()});r.on("resume",function(){c.resume()});this.listeners("*").length&&this.emit("*",i,r);this.emit(i,r);if(r.props.size===0){r.end();this._entry=null}};