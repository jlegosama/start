// write data to it, and it'll emit data in 512 byte blocks.
// if you .end() or .flush(), it'll emit whatever it's got,
// padded with nulls to 512 bytes.
function BlockStream(e,t){this.writable=this.readable=!0;this._opt=t||{};this._chunkSize=e||512;this._offset=0;this._buffer=[];this._bufferLength=0;if(this._opt.nopad)this._zeroes=!1;else{this._zeroes=new Buffer(this._chunkSize);for(var n=0;n<this._chunkSize;n++)this._zeroes[n]=0}}module.exports=BlockStream;var Stream=require("stream").Stream,inherits=require("../inherits/inherits.js"),assert=require("assert").ok,debug=process.env.DEBUG?console.error:function(){};inherits(BlockStream,Stream);BlockStream.prototype.write=function(e){if(this._ended)throw new Error("BlockStream: write after end");e&&!Buffer.isBuffer(e)&&(e=new Buffer(e+""));if(e.length){this._buffer.push(e);this._bufferLength+=e.length}if(this._bufferLength>=this._chunkSize){if(this._paused){this._needDrain=!0;return!1}this._emitChunk()}return!0};BlockStream.prototype.pause=function(){this._paused=!0};BlockStream.prototype.resume=function(){this._paused=!1;return this._emitChunk()};BlockStream.prototype.end=function(e){typeof e=="function"&&(cb=e,e=null);e&&this.write(e);this._ended=!0;this.flush()};BlockStream.prototype.flush=function(){this._emitChunk(!0)};BlockStream.prototype._emitChunk=function(e){if(e&&this._zeroes){var t=this._bufferLength%this._chunkSize;t!==0&&(t=this._chunkSize-t);if(t>0){this._buffer.push(this._zeroes.slice(0,t));this._bufferLength+=t}}if(this._emitting||this._paused)return;this._emitting=!0;var n=0;while(this._bufferLength>=this._chunkSize&&(e||!this._paused)){var r,i=0,s=this._chunkSize;while(s>0&&(e||!this._paused)){var o=this._buffer[n],u=o.length-this._offset;if(r||u<s){r=r||new Buffer(this._chunkSize);o.copy(r,i,this._offset,this._offset+Math.min(u,s))}else o.length===s&&this._offset===0?r=o:r=o.slice(this._offset,this._offset+s);if(u>s){this._offset+=s;s=0}else{s-=u;i+=u;n++;this._offset=0}}this._bufferLength-=this._chunkSize;assert(r.length===this._chunkSize);this.emit("data",r);r=null}this._buffer=this._buffer.slice(n);if(this._paused){this._needsDrain=!0;this._emitting=!1;return}var a=this._buffer.length;if(e&&!this._zeroes&&a){if(a===1)this._offset?this.emit("data",this._buffer[0].slice(this._offset)):this.emit("data",this._buffer[0]);else{var s=this._bufferLength,r=new Buffer(s),i=0;for(var f=0;f<a;f++){var o=this._buffer[f],u=o.length-this._offset;o.copy(r,i,this._offset);this._offset=0;i+=u;this._bufferLength-=u}this.emit("data",r)}this._buffer.length=0;this._bufferLength=0;this._offset=0}if(this._needDrain){this._needDrain=!1;this.emit("drain")}if(this._bufferLength===0&&this._ended&&!this._endEmitted){this._endEmitted=!0;this.emit("end")}this._emitting=!1};