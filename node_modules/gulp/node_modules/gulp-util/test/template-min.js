var util=require("../"),should=require("should"),path=require("path");require("mocha");describe("template()",function(){it("should work with just a template",function(e){var t={name:"todd",file:{path:"hi.js"}},n="test todd hi.js",r=util.template("test <%= name %> <%= file.path %>");should.exist(r);"function".should.equal(typeof r);var i=r(t);"string".should.equal(typeof i);i.should.equal(n);e()});it("should work with a template and data",function(e){var t={name:"todd",file:{path:"hi.js"}},n="test todd hi.js",r=util.template("test <%= name %> <%= file.path %>",t);should.exist(r);"string".should.equal(typeof r);r.should.equal(n);e()});it("should throw an error when no file object is passed",function(e){var t={name:"todd"};try{var n=util.template("test <%= name %> <%= file.path %>",t)}catch(r){should.exist(r);e()}});it("should ignore modified templateSettings",function(e){var t=require("lodash.templatesettings");t.interpolate=/\{\{([\s\S]+?)\}\}/g;var n={name:"todd",file:{path:"hi.js"}},r="test {{name}} hi.js",i=util.template("test {{name}} <%= file.path %>");should.exist(i);"function".should.equal(typeof i);var s=i(n);"string".should.equal(typeof s);s.should.equal(r);e()});it("should allow ES6 delimiters",function(e){var t={name:"todd",file:{path:"hi.js"}},n="test todd hi.js",r=util.template("test ${name} ${file.path}");should.exist(r);"function".should.equal(typeof r);var i=r(t);"string".should.equal(typeof i);i.should.equal(n);e()})});