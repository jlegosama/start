var stream=require("stream"),duplex2=module.exports=function(t,n,r){return new DuplexWrapper(t,n,r)},DuplexWrapper=exports.DuplexWrapper=function(t,n,r){if(typeof r=="undefined"){r=n;n=t;t=null}t=t||{};t.objectMode=!0;stream.Duplex.call(this,t);this._bubbleErrors=typeof t.bubbleErrors=="undefined"||!!t.bubbleErrors;this._writable=n;this._readable=r;var i=this;n.once("finish",function(){i.end()});this.once("finish",function(){n.end()});r.on("data",function(e){i.push(e)||r.pause()});r.once("end",function(){return i.push(null)});if(this._bubbleErrors){n.on("error",function(e){return i.emit("error",e)});r.on("error",function(e){return i.emit("error",e)})}};DuplexWrapper.prototype=Object.create(stream.Duplex.prototype,{constructor:{value:DuplexWrapper}});DuplexWrapper.prototype._write=function(t,n,r){this._writable.write(t,n,r)};DuplexWrapper.prototype._read=function(t){this._readable.resume()};