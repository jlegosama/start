function compare(e,t){assert.equal(typeof e,typeof t,"types didn't match");if(typeof e!="object"||e===null)assert.strictEqual(e,t,"result doesn't equal expected");else for(var n in e){assert.ok(n in t,"result didn't contain property "+n);compare(e[n],t[n])}}var fs=require("fs"),path=require("path"),assert=require("assert"),util=require("util"),Parser=require("htmlparser2").Parser,Handler=require("../"),basePath=path.resolve(__dirname,"cases"),inspectOpts={showHidden:!0,depth:null};fs.readdirSync(basePath).filter(RegExp.prototype.test,/\.json$/).map(function(e){return path.resolve(basePath,e)}).map(require).forEach(function(e){it(e.name,function(){var t=e.expected,n=new Handler(function(e,n){assert.ifError(e);try{compare(t,n)}catch(r){r.expected=util.inspect(t,inspectOpts);r.actual=util.inspect(n,inspectOpts);throw r}},e.options),r=e.html,i=new Parser(n,e.options);for(var s=0;s<r.length;s++)i.write(r.charAt(s));i.done();i.parseComplete(r)})});