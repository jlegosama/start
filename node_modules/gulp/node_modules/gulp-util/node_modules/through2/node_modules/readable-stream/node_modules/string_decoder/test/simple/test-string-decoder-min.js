// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var common=require("../common"),assert=require("assert"),StringDecoder=require("../../").StringDecoder,decoder=new StringDecoder("utf8"),buffer=new Buffer("$");assert.deepEqual("$",decoder.write(buffer));buffer=new Buffer("¢");assert.deepEqual("",decoder.write(buffer.slice(0,1)));assert.deepEqual("¢",decoder.write(buffer.slice(1,2)));buffer=new Buffer("€");assert.deepEqual("",decoder.write(buffer.slice(0,1)));assert.deepEqual("",decoder.write(buffer.slice(1,2)));assert.deepEqual("€",decoder.write(buffer.slice(2,3)));buffer=new Buffer([240,164,173,162]);var s="";s+=decoder.write(buffer.slice(0,1));s+=decoder.write(buffer.slice(1,2));s+=decoder.write(buffer.slice(2,3));s+=decoder.write(buffer.slice(3,4));assert.ok(s.length>0);buffer=new Buffer("EDA0BDEDB18D","hex");var s="";s+=decoder.write(buffer.slice(0,1));s+=decoder.write(buffer.slice(1,2));s+=decoder.write(buffer.slice(2,3));assert.equal(s,"");s+=decoder.write(buffer.slice(3,4));s+=decoder.write(buffer.slice(4,5));s+=decoder.write(buffer.slice(5,6));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,2));s+=decoder.write(buffer.slice(2,4));assert.equal(s,"");s+=decoder.write(buffer.slice(4,6));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,3));assert.equal(s,"");s+=decoder.write(buffer.slice(3,6));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,4));assert.equal(s,"");s+=decoder.write(buffer.slice(4,5));s+=decoder.write(buffer.slice(5,6));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,5));assert.equal(s,"");s+=decoder.write(buffer.slice(5,6));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,6));assert.equal(s,"👍");decoder=new StringDecoder("ucs2");buffer=new Buffer("ab","ucs2");assert.equal(decoder.write(buffer),"ab");buffer=new Buffer("abc","ucs2");assert.equal(decoder.write(buffer.slice(0,3)),"a");assert.equal(decoder.write(buffer.slice(3,6)),"bc");buffer=new Buffer("3DD84DDC","hex");var s="";s+=decoder.write(buffer.slice(0,1));s+=decoder.write(buffer.slice(1,2));assert.equal(s,"");s+=decoder.write(buffer.slice(2,3));s+=decoder.write(buffer.slice(3,4));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,2));assert.equal(s,"");s+=decoder.write(buffer.slice(2,4));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,3));assert.equal(s,"");s+=decoder.write(buffer.slice(3,4));assert.equal(s,"👍");var s="";s+=decoder.write(buffer.slice(0,4));assert.equal(s,"👍");var expected="ˤdዤ0ぅ",buffer=new Buffer([203,164,100,225,139,164,48,227,129,133]),charLengths=[0,0,1,2,2,2,3,4,4,4,5,5];common.print("scanning ");for(var j=2;j<buffer.length;j++)for(var i=1;i<j;i++){var decoder=new StringDecoder("utf8"),sum=decoder.write(buffer.slice(0,i));assert.equal(charLengths[i],sum.length);sum+=decoder.write(buffer.slice(i,j));sum+=decoder.write(buffer.slice(j,buffer.length));assert.equal(expected,sum);common.print(".")}console.log(" crayon!");