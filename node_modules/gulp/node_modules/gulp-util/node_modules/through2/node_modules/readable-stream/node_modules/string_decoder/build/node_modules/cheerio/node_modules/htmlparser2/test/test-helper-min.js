function eventReducer(e,t){t[0]!=="onerror"&&t[0]!=="onend"&&(t[0]==="ontext"&&e.length&&e[e.length-1].event==="text"?e[e.length-1].data[0]+=t[1]:e.push({event:t[0].substr(2),data:t.slice(1)}));return e}function getCallback(e,t){var n=!1;return function(r,i){assert.ifError(r);try{assert.deepEqual(e,i,"didn't get expected output")}catch(s){s.expected=JSON.stringify(e,null,2);s.actual=JSON.stringify(i,null,2);throw s}n?t():n=!0}}var htmlparser2=require(".."),fs=require("fs"),path=require("path"),assert=require("assert"),Parser=htmlparser2.Parser,CollectingHandler=htmlparser2.CollectingHandler;exports.writeToParser=function(e,t,n){var r=new Parser(e,t);for(var i=0;i<n.length;i++)r.write(n.charAt(i));r.end();r.parseComplete(n)};exports.getEventCollector=function(e){var t=new CollectingHandler({onerror:e,onend:function(){e(null,t.events.reduce(eventReducer,[]))}});return t};exports.mochaTest=function(e,t,n){function r(){var n=path.join(t,e);fs.readdirSync(n).filter(RegExp.prototype.test,/^[^\._]/).map(function(e){return path.join(n,e)}).map(require).forEach(i)}function i(e){it(e.name,function(t){n(e,getCallback(e.expected,t))})}describe(e,r)};