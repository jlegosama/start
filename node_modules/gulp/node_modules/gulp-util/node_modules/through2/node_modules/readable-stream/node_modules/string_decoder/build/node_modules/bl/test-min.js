const tape=require("tape"),crypto=require("crypto"),fs=require("fs"),hash=require("hash_file"),BufferList=require("./");tape("single bytes from single buffer",function(e){var t=new BufferList;t.append(new Buffer("abcd"));e.equal(t.length,4);e.equal(t.get(0),97);e.equal(t.get(1),98);e.equal(t.get(2),99);e.equal(t.get(3),100);e.end()});tape("single bytes from multiple buffers",function(e){var t=new BufferList;t.append(new Buffer("abcd"));t.append(new Buffer("efg"));t.append(new Buffer("hi"));t.append(new Buffer("j"));e.equal(t.length,10);e.equal(t.get(0),97);e.equal(t.get(1),98);e.equal(t.get(2),99);e.equal(t.get(3),100);e.equal(t.get(4),101);e.equal(t.get(5),102);e.equal(t.get(6),103);e.equal(t.get(7),104);e.equal(t.get(8),105);e.equal(t.get(9),106);e.end()});tape("multi bytes from single buffer",function(e){var t=new BufferList;t.append(new Buffer("abcd"));e.equal(t.length,4);e.equal(t.slice(0,4).toString("ascii"),"abcd");e.equal(t.slice(0,3).toString("ascii"),"abc");e.equal(t.slice(1,4).toString("ascii"),"bcd");e.end()});tape("multiple bytes from multiple buffers",function(e){var t=new BufferList;t.append(new Buffer("abcd"));t.append(new Buffer("efg"));t.append(new Buffer("hi"));t.append(new Buffer("j"));e.equal(t.length,10);e.equal(t.slice(0,10).toString("ascii"),"abcdefghij");e.equal(t.slice(3,10).toString("ascii"),"defghij");e.equal(t.slice(3,6).toString("ascii"),"def");e.equal(t.slice(3,8).toString("ascii"),"defgh");e.equal(t.slice(5,10).toString("ascii"),"fghij");e.end()});tape("consuming from multiple buffers",function(e){var t=new BufferList;t.append(new Buffer("abcd"));t.append(new Buffer("efg"));t.append(new Buffer("hi"));t.append(new Buffer("j"));e.equal(t.length,10);e.equal(t.slice(0,10).toString("ascii"),"abcdefghij");t.consume(3);e.equal(t.length,7);e.equal(t.slice(0,7).toString("ascii"),"defghij");t.consume(2);e.equal(t.length,5);e.equal(t.slice(0,5).toString("ascii"),"fghij");t.consume(1);e.equal(t.length,4);e.equal(t.slice(0,4).toString("ascii"),"ghij");t.consume(1);e.equal(t.length,3);e.equal(t.slice(0,3).toString("ascii"),"hij");t.consume(2);e.equal(t.length,1);e.equal(t.slice(0,1).toString("ascii"),"j");e.end()});tape("test readUInt8 / readInt8",function(e){var t=new Buffer(1),n=new Buffer(3),r=new Buffer(3),i=new BufferList;n[1]=3;n[2]=4;r[0]=35;r[1]=66;i.append(t);i.append(n);i.append(r);e.equal(i.readUInt8(2),3);e.equal(i.readInt8(2),3);e.equal(i.readUInt8(3),4);e.equal(i.readInt8(3),4);e.equal(i.readUInt8(4),35);e.equal(i.readInt8(4),35);e.equal(i.readUInt8(5),66);e.equal(i.readInt8(5),66);e.end()});tape("test readUInt16LE / readUInt16BE / readInt16LE / readInt16BE",function(e){var t=new Buffer(1),n=new Buffer(3),r=new Buffer(3),i=new BufferList;n[1]=3;n[2]=4;r[0]=35;r[1]=66;i.append(t);i.append(n);i.append(r);e.equal(i.readUInt16BE(2),772);e.equal(i.readUInt16LE(2),1027);e.equal(i.readInt16BE(2),772);e.equal(i.readInt16LE(2),1027);e.equal(i.readUInt16BE(3),1059);e.equal(i.readUInt16LE(3),8964);e.equal(i.readInt16BE(3),1059);e.equal(i.readInt16LE(3),8964);e.equal(i.readUInt16BE(4),9026);e.equal(i.readUInt16LE(4),16931);e.equal(i.readInt16BE(4),9026);e.equal(i.readInt16LE(4),16931);e.end()});tape("test readUInt32LE / readUInt32BE / readInt32LE / readInt32BE",function(e){var t=new Buffer(1),n=new Buffer(3),r=new Buffer(3),i=new BufferList;n[1]=3;n[2]=4;r[0]=35;r[1]=66;i.append(t);i.append(n);i.append(r);e.equal(i.readUInt32BE(2),50602818);e.equal(i.readUInt32LE(2),1109591043);e.equal(i.readInt32BE(2),50602818);e.equal(i.readInt32LE(2),1109591043);e.end()});tape("test readFloatLE / readFloatBE",function(e){var t=new Buffer(1),n=new Buffer(3),r=new Buffer(3),i=new BufferList;n[1]=0;n[2]=0;r[0]=128;r[1]=63;i.append(t);i.append(n);i.append(r);e.equal(i.readFloatLE(2),1);e.end()});tape("test readDoubleLE / readDoubleBE",function(e){var t=new Buffer(1),n=new Buffer(3),r=new Buffer(10),i=new BufferList;n[1]=85;n[2]=85;r[0]=85;r[1]=85;r[2]=85;r[3]=85;r[4]=213;r[5]=63;i.append(t);i.append(n);i.append(r);e.equal(i.readDoubleLE(2),.3333333333333333);e.end()});tape("test toString",function(e){var t=new BufferList;t.append(new Buffer("abcd"));t.append(new Buffer("efg"));t.append(new Buffer("hi"));t.append(new Buffer("j"));e.equal(t.toString("ascii",0,10),"abcdefghij");e.equal(t.toString("ascii",3,10),"defghij");e.equal(t.toString("ascii",3,6),"def");e.equal(t.toString("ascii",3,8),"defgh");e.equal(t.toString("ascii",5,10),"fghij");e.end()});tape("test toString encoding",function(e){var t=new BufferList,n=new Buffer("abcdefghijÿ\0");t.append(new Buffer("abcd"));t.append(new Buffer("efg"));t.append(new Buffer("hi"));t.append(new Buffer("j"));t.append(new Buffer("ÿ\0"));"hex utf8 utf-8 ascii binary base64 ucs2 ucs-2 utf16le utf-16le".split(" ").forEach(function(r){e.equal(t.toString(r),n.toString(r))});e.end()});tape("test stream",function(e){var t=crypto.randomBytes(1048576),n=hash(t,"md5"),r=crypto.createHash("md5"),i=new BufferList(function(t,s){e.ok(Buffer.isBuffer(s));e.ok(t===null);e.equal(n,hash(i.slice(),"md5"));e.equal(n,hash(s,"md5"));i.pipe(fs.createWriteStream("/tmp/bl_test_rnd_out.dat")).on("close",function(){var t=fs.createReadStream("/tmp/bl_test_rnd_out.dat");t.on("data",r.update.bind(r));t.on("end",function(){e.equal(n,r.digest("hex"),"woohoo! correct hash!");e.end()})})});fs.writeFileSync("/tmp/bl_test_rnd.dat",t);fs.createReadStream("/tmp/bl_test_rnd.dat").pipe(i)});tape("instantiation with Buffer",function(e){var t=crypto.randomBytes(1024),n=crypto.randomBytes(1024),r=BufferList(t);e.equal(hash(t,"md5"),hash(r.slice(),"md5"),"same hash!");r=BufferList([t,n]);e.equal(hash(r.slice(),"md5"),hash(Buffer.concat([t,n]),"md5"),"same hash!");e.end()});tape("test String appendage",function(e){var t=new BufferList,n=new Buffer("abcdefghijÿ\0");t.append("abcd");t.append("efg");t.append("hi");t.append("j");t.append("ÿ\0");"hex utf8 utf-8 ascii binary base64 ucs2 ucs-2 utf16le utf-16le".split(" ").forEach(function(r){e.equal(t.toString(r),n.toString(r))});e.end()});tape("write nothing, should get empty buffer",function(e){e.plan(3);BufferList(function(n,r){e.notOk(n,"no error");e.ok(Buffer.isBuffer(r),"got a buffer");e.equal(0,r.length,"got a zero-length buffer");e.end()}).end()});tape("unicode string",function(e){e.plan(2);var t="☀",n="☃",r=t+" and "+n,i=BufferList();i.write(t);i.write(" and ");i.write(n);e.equal(r,i.toString());e.equal((new Buffer(r)).toString("hex"),i.toString("hex"))});tape("should emit finish",function(e){var t=BufferList(),n=BufferList();t.write("hello");t.pipe(n);n.on("finish",function(){e.equal(n.toString("utf8"),"hello");e.end()})});tape("basic copy",function(e){var t=crypto.randomBytes(1024),n=new Buffer(1024),r=BufferList(t);r.copy(n);e.equal(hash(r.slice(),"md5"),hash(n,"md5"),"same hash!");e.end()});tape("copy after many appends",function(e){var t=crypto.randomBytes(512),n=new Buffer(1024),r=BufferList(t);r.append(t);r.copy(n);e.equal(hash(r.slice(),"md5"),hash(n,"md5"),"same hash!");e.end()});tape("copy at a precise position",function(e){var t=crypto.randomBytes(1004),n=new Buffer(1024),r=BufferList(t);r.copy(n,20);e.equal(hash(r.slice(),"md5"),hash(n.slice(20),"md5"),"same hash!");e.end()});tape("copy starting from a precise location",function(e){var t=crypto.randomBytes(10),n=new Buffer(5),r=BufferList(t);r.copy(n,0,5);e.equal(hash(r.slice(5),"md5"),hash(n,"md5"),"same hash!");e.end()});tape("copy in an interval",function(e){var t=crypto.randomBytes(10),n=new Buffer(3),r=BufferList(t),i=new Buffer(3);n.copy(i);t.copy(i,0,5,7);r.copy(n,0,5,7);e.equal(hash(i,"md5"),hash(n,"md5"),"same hash!");e.end()});tape("copy an interval between two buffers",function(e){var t=crypto.randomBytes(10),n=new Buffer(10),r=BufferList(t);r.append(t);r.copy(n,0,5,15);e.equal(hash(r.slice(5,15),"md5"),hash(n,"md5"),"same hash!");e.end()});tape("duplicate",function(e){e.plan(2);var t=new BufferList("abcdefghijÿ\0"),n=t.duplicate();e.equal(t.prototype,n.prototype);e.equal(t.toString("hex"),n.toString("hex"))});tape("handle error",function(e){e.plan(2);fs.createReadStream("/does/not/exist").pipe(BufferList(function(n,r){e.ok(n instanceof Error,"has error");e.notOk(r,"no data")}))});