var inspectStream=require("../lib/inspectStream"),Stream=require("stream"),should=require("should");require("mocha");describe("inspectStream()",function(){it("should work on a core Stream",function(e){var t=new Stream;inspectStream(t).should.equal("<Stream>");e()});it("should work on a core Readable Stream",function(e){var t=new Stream.Readable;inspectStream(t).should.equal("<ReadableStream>");e()});it("should work on a core Writable Stream",function(e){var t=new Stream.Writable;inspectStream(t).should.equal("<WritableStream>");e()});it("should work on a core Duplex Stream",function(e){var t=new Stream.Duplex;inspectStream(t).should.equal("<DuplexStream>");e()});it("should work on a core Transform Stream",function(e){var t=new Stream.Transform;inspectStream(t).should.equal("<TransformStream>");e()});it("should work on a core PassThrough Stream",function(e){var t=new Stream.PassThrough;inspectStream(t).should.equal("<PassThroughStream>");e()});it("should not work on a Buffer",function(e){var t=new Buffer("test");should.not.exist(inspectStream(t));e()});it("should not work on a null",function(e){should.not.exist(inspectStream(null));e()})});