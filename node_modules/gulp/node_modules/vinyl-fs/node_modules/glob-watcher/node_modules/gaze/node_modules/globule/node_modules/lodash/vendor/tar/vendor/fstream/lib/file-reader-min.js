// Basically just a wrapper around an fs.ReadStream
function FileReader(e){var t=this;if(!(t instanceof FileReader))throw new Error("FileReader must be called as constructor.");if(!(e.type==="Link"&&e.Link||e.type==="File"&&e.File))throw new Error("Non-file type "+e.type);t._buffer=[];t._bytesEmitted=0;Reader.call(t,e)}module.exports=FileReader;var fs=require("../../graceful-fs/graceful-fs.js"),fstream=require("../fstream.js"),Reader=fstream.Reader,inherits=require("../../inherits/inherits.js"),mkdir=require("../../mkdirp"),Reader=require("./reader.js"),EOF={EOF:!0},CLOSE={CLOSE:!0};inherits(FileReader,Reader);FileReader.prototype._getStream=function(){var e=this,t=e._stream=fs.createReadStream(e._path,e.props);e.props.blksize&&(t.bufferSize=e.props.blksize);t.on("open",e.emit.bind(e,"open"));t.on("data",function(t){e._bytesEmitted+=t.length;if(!t.length)return;if(e._paused||e._buffer.length){e._buffer.push(t);e._read()}else e.emit("data",t)});t.on("end",function(){if(e._paused||e._buffer.length){e._buffer.push(EOF);e._read()}else e.emit("end");e._bytesEmitted!==e.props.size&&e.error("Didn't get expected byte count\nexpect: "+e.props.size+"\n"+"actual: "+e._bytesEmitted)});t.on("close",function(){if(e._paused||e._buffer.length){e._buffer.push(CLOSE);e._read()}else e.emit("close")});e._read()};FileReader.prototype._read=function(){var e=this;if(e._paused)return;if(!e._stream)return e._getStream();if(e._buffer.length){var t=e._buffer;for(var n=0,r=t.length;n<r;n++){var i=t[n];i===EOF?e.emit("end"):i===CLOSE?e.emit("close"):e.emit("data",i);if(e._paused){e._buffer=t.slice(n);return}}e._buffer.length=0}};FileReader.prototype.pause=function(e){var t=this;if(t._paused)return;e=e||t;t._paused=!0;t._stream&&t._stream.pause();t.emit("pause",e)};FileReader.prototype.resume=function(e){var t=this;if(!t._paused)return;e=e||t;t.emit("resume",e);t._paused=!1;t._stream&&t._stream.resume();t._read()};