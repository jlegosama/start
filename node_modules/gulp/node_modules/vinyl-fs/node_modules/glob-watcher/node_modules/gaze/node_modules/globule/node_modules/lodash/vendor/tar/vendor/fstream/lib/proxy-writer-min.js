// A writer for when we don't know what kind of thing
// the thing is.  That is, it's not explicitly set,
// so we're going to make it whatever the thing already
// is, or "File"
//
// Until then, collect all events.
function ProxyWriter(e){var t=this;if(!(t instanceof ProxyWriter))throw new Error("ProxyWriter must be called as constructor.");t.props=e;t._needDrain=!1;Writer.call(t,e)}module.exports=ProxyWriter;var Writer=require("./writer.js"),getType=require("./get-type.js"),inherits=require("../../inherits/inherits.js"),collect=require("./collect.js"),fs=require("fs");inherits(ProxyWriter,Writer);ProxyWriter.prototype._stat=function(){var e=this,t=e.props,n=t.follow?"stat":"lstat";fs[n](t.path,function(n,r){var i;n||!r?i="File":i=getType(r);t[i]=!0;t.type=e.type=i;e._old=r;e._addProxy(Writer(t,r))})};ProxyWriter.prototype._addProxy=function(e){var t=this;if(t._proxy)return t.error("proxy already set");t._proxy=e;["ready","error","close","pipe","drain","warn"].forEach(function(n){e.on(n,t.emit.bind(t,n))});t.emit("proxy",e);var n=t._buffer;n.forEach(function(t){e[t[0]].call(e,t[1])});t._buffer.length=0;t._needsDrain&&t.emit("drain")};ProxyWriter.prototype.add=function(e){collect(e);if(!this._proxy){this._buffer.push(["add",[e]]);this._needDrain=!0;return!1}return this._proxy.add(e)};ProxyWriter.prototype.write=function(e){if(!this._proxy){this._buffer.push(["write",[e]]);this._needDrain=!0;return!1}return this._proxy.write(e)};ProxyWriter.prototype.end=function(e){if(!this._proxy){this._buffer.push(["end",e]);return!1}return this._proxy.end(e)};