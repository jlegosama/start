var watch=require("../"),should=require("should"),join=require("path").join,fs=require("fs"),rimraf=require("rimraf");require("mocha");describe("glob-watcher",function(){it("should return a valid file struct via EE",function(e){var t=join(__dirname,"./fixtures/stuff/temp.coffee"),n=join(__dirname,"./fixtures/**/temp.coffee");fs.writeFileSync(t,"testing");var r=watch(n);r.on("change",function(e){should.exist(e);should.exist(e.path);should.exist(e.type);e.type.should.equal("changed");e.path.should.equal(t);r.end()});r.on("end",function(){rimraf.sync(t);e()});setTimeout(function(){fs.writeFileSync(t,"test test")},125)});it("should return a valid file struct via callback",function(e){var t=join(__dirname,"./fixtures/stuff/test.coffee"),n=join(__dirname,"./fixtures/**/test.coffee");fs.writeFileSync(t,"testing");var r=watch(n,function(e){should.exist(e);should.exist(e.path);should.exist(e.type);e.type.should.equal("changed");e.path.should.equal(t);r.end()});r.on("end",function(){rimraf.sync(t);e()});setTimeout(function(){fs.writeFileSync(t,"test test")},200)});it("should not return a non-matching file struct via callback",function(e){var t=join(__dirname,"./fixtures/test123.coffee"),n=join(__dirname,"./fixtures/**/test.coffee");fs.writeFileSync(t,"testing");var r=watch(n,function(e){throw new Error("Should not have been called! "+e.path)});setTimeout(function(){fs.writeFileSync(t,"test test")},200);setTimeout(function(){rimraf.sync(t);e()},1500)})});