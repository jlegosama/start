function OrderedStreams(e,t){e=e||[];t=t||{};Array.isArray(e)||(e=[e]);t.objectMode=!0;Readable.call(this,t);var n=this;if(e.length===0)this.push(null);else{this._buff={};this._totalStreams=e.length;this._openedStreams=e.length;e.forEach(function(e,t){if(!e.readable)throw new Error("All input streams must be readable");n._buff[t]||(n._buff[t]=[]);e.on("data",function(e){t===0?n.push(e):n._buff[t].push(e)});e.on("end",function(){if(!--n._openedStreams){for(var e=0;e<n._totalStreams;e++)while(n._buff[e].length)n.push(n._buff[e].shift());n.push(null)}});e.on("error",function(e){n.emit("error",e)})})}}var Readable=require("stream").Readable,util=require("util");util.inherits(OrderedStreams,Readable);OrderedStreams.prototype._read=function(){};module.exports=OrderedStreams;